name: Moderate Issue
on:
  issues:
    types:
      - opened
      - edited
      - reopened
jobs:
  moderate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: match_script
        if: startsWith( ${{ github.event.issue.body }} , "### Bug Description")
        with:
          result-encoding: string
          script: |
            const issue_content = context.payload.issue.body;
            if (context.payload.issue.pull_request != null || context.payload.issue.state == "closed" || !issue_content.startsWith("### Bug Description")) {
                return;
            }

            const author_name = context.payload.issue.user ? context.payload.issue.user.login : context.payload.sender.login;
            const LOG_FILE_REGEX = /### Log File[^]+?\[.+\.log\]\(https:\/\/github\.com\/\w+\/sodium-fabric\/files\/\d+\/.+\.log\)/;
            const CRASH_REPORT_REGEX = /### Crash Report[^]+?\[.+\.(txt|log)\]\(https:\/\/github\.com\/\w+\/sodium-fabric\/files\/\d+\/.+\.(txt|log)\)/;

            if (!LOG_FILE_REGEX.test(issue_content)) {
                await github.rest.issues.update({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: "closed",
                  state_reason: "not_planned",
                  labels: ["E-invalid"],
                })
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `${author_name}, your issue was closed.",
                });
            } else if (!CRASH_REPORT_REGEX.test(issue_content)) {
                await github.rest.issues.update({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "closed",
                state_reason: "not_planned",
                labels: ["E-invalid"],
              })
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `${author_name}, your issue was closed.",
              });
            }
